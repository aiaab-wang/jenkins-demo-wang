pipeline {
    agent {
        kubernetes {
            label 'jenkins'
            defaultContainer 'docker'
            inheritFrom 'jenkins-pod-template'
        }
    }
    parameters {
      gitParameter branchFilter: 'origin/(.*)', defaultValue: 'main', name: 'BRANCH', type: 'PT_BRANCH'
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: "${params.BRANCH}", url: 'https://github.com/aiaab-wang/jenkins-demo-wang.git' // 替换为你的仓库地址
                // git 'https://github.com/aiaab-wang/jenkins-demo-wang.git' // 替换为你的仓库地址
                // git credentialsId: 'github-credentials', url: 'https://github.com/aiaab-wang/jenkins-demo-wang.git'
            }
        }
        stage('check docker') {
            steps {
                script {
                    sh "echo ${PATH}"
                }
            }
        }

        stage('Build Docker Image') {

            steps {
                script {
                    def imageName = "192.168.46.167:8443/alpine:3.14-${env.BUILD_ID}" // 替换为你的镜像名称
                    sh "docker build -t ${imageName} ."
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-credentials', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login 192.68.46.167:8443 -u $DOCKER_USERNAME --password-stdin' // 替换为你的 Docker Registry
                        sh "docker push ${imageName}"
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "kubectl run demo-pod --image=${imageName} --restart=Never" // 替换为你的 pod 名称
                }
            }
        }
    }
}
